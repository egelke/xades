<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IM.Xades</name>
    </assembly>
    <members>
        <member name="T:IM.Xades.TSA.Rfc3161TimestampProvider">
            <summary>
            Timestamp provided via teh RFC3161 protocol.
            </summary>
            <remarks>
            Get a timestamp via the HTTP protocol.
            </remarks>
        </member>
        <member name="T:IM.Xades.TSA.ITimestampProvider">
            <summary>
            Interface a Timestamp Provider must implement
            </summary>
            <remarks>
            The library comes with an implementation for DSS and rfc3161 (TODO), but it is always possible to
            write your own implementation if required.
            </remarks>
            <seealso cref="T:IM.Xades.TSA.DssTimestampProvider"/>
        </member>
        <member name="M:IM.Xades.TSA.ITimestampProvider.GetTimestampFromDocumentHash(System.Byte[],System.String)">
            <summary>
            Method called to request a timestamp.
            </summary>
            <remarks>
            <para>
            For implementers, this method should call the TSA to obtain a RFC3161 compliant timestamp token.
            </para>
            </remarks>
            <param name="hash">The hash of the document that must be timestamped</param>
            <param name="digestMethod">The hasm method that was used, in XML-DSIG (and related) format e.g. <literal>http://www.w3.org/2001/04/xmlenc#sha256</literal></param>
            <returns>Must return a binary version of a RFC3161 compliant timestamp token (not the response) valid for the provided hash</returns>
        </member>
        <member name="M:IM.Xades.TSA.Rfc3161TimestampProvider.#ctor">
            <summary>
            Constuctor that has the Fedict TSA as destination.
            </summary>
            <remarks>
            You may only use this when you have the explicit agreement of Fedict. 
            </remarks>
        </member>
        <member name="M:IM.Xades.TSA.Rfc3161TimestampProvider.#ctor(System.Uri)">
            <summary>
            Constructor that accept the address of the TSA.
            </summary>
            <param name="address">The url of the TSA</param>
        </member>
        <member name="M:IM.Xades.TSA.Rfc3161TimestampProvider.GetTimestampFromDocumentHash(System.Byte[],System.String)">
            <summary>
            Gets a timestamp of the provided address via the RFC3161.
            </summary>
            <param name="hash">The has to get the timestamp from</param>
            <param name="digestMethod">The algorithm used to calculate the hash</param>
            <returns>The timestamp token in binary (encoded) format</returns>
            <exception cref="T:System.Net.WebException">When the TSA returned a http-error</exception>
            <exception cref="T:Org.BouncyCastle.Tsp.TspValidationException">When the TSA returns an invalid timestamp response</exception>
        </member>
        <member name="T:IM.Xades.XadesCreator">
            <summary>
            Create Xades compliaten XML-Signatures.
            </summary>
            <remarks>
            <para>
            Targets the XAdES 1.4.1 standard.  Currently supports Xades-BES and Xades-T.  Other profiles may be added in the future.
            </para>
            </remarks>
        </member>
        <member name="M:IM.Xades.XadesCreator.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Creates an new instance of the class with the singing certificate provided.
            </summary>
            <remarks>
            <para>
            In order to be able to sign the certificate must have a private key linked to it.  Certificate can either be retrieved from
            the windows key store or from a pkcs#11 file.
            </para>
            <para>
            Microsoft uses cryptographic providers to keep the keys.  The default crypto provider does not support SHA-256 and is therefore
            incompatible with this library.  The following providers are known to be supported:
            </para>
            <list type="bullet">
                <item><description>Microsoft Enhanced RSA and AES Cryptographic Provider</description></item>
                <item><description>Microsoft Enhanced Cryptographic Provider v1.0</description></item>
            </list>
            <para>
            PKCS#12 files with multiple private keys aren't supported and the cryto provider must be specified in the file which is rarely the case.
            Fortunately, it is possible to add the crypto provider by recreating it via OpenSSL via the following commands:
            </para>
            <command>openssl pkcs12 -in file.p12 -out file.pem</command>
            <command>openssl pkcs12 -export -in file.pem -out file.p12 -name MyCareNet -CSP "Microsoft Enhanced RSA and AES Cryptographic Provider"</command>
            </remarks>
            <param name="certificate">Certificate with private key, will be used to sign the the message</param>
            <exception cref="T:System.ArgumentNullException">When the certificate param is null</exception>
            <exception cref="T:System.ArgumentException">When certificate doesn't contain a private key.</exception>
        </member>
        <member name="M:IM.Xades.XadesCreator.CreateXadesBes(System.Xml.XmlDocument)">
            <summary>
            Create a XAdES-BES signature, signing the entire document.
            </summary>
            <remarks>
            <para>
            Creates a signature, where the entire document is signed.  It
            returns a detached signature that can be used seperatly or
            added to the document.  Before it can be added, it should be
            imported.
            </para>
            </remarks>
            <param name="doc">The XML doucment to sign</param>
            <returns>The XML-signature element containing the required XAdES structures</returns>
            <exception cref="T:System.ArgumentNullException">When the doc argument is null</exception>
        </member>
        <member name="M:IM.Xades.XadesCreator.CreateXadesBes(System.Xml.XmlDocument,System.String)">
            <summary>
            Create a XAdES-BES signature, singing the the part with the provided reference.
            </summary>
            <remarks>
            <para>
            Creates a signature, where only the requested element is signed.  It
            returns a detached signature that can be used seperatly or
            added to the document.  Before it can be added, it should be
            imported.
            </para>
            </remarks>
            <example>
            <code language="C#">
            var xigner = new XadesCreator(certificate);
            xigner.TimestampProvider = new TSA.EHealthTimestampProvider(tsa);
            xigner.DataTransforms.Add(new XmlDsigBase64Transform());
            xigner.DataTransforms.Add(new OptionalDeflateTransform());
            var xades = xigner.CreateXadesT(document, "datailID");
            </code>
            </example>
            <param name="doc">XML document contains an element with an "Id" equal to the reference parameter</param>
            <param name="reference">The reference of the elmement to sign, without the #-sign</param>
            <returns>The XML-signature element containing the required XAdES structures.</returns>
            <exception cref="T:System.ArgumentNullException">When the doc argument is null</exception>
        </member>
        <member name="M:IM.Xades.XadesCreator.ExtendToXadesT(System.Xml.XmlElement@)">
            <summary>
            Add a timestamp to the signature, complaint with the XAdES-T 1.3.1 standard.
            </summary>
            <remarks>
            Requires a Timestamp Provider <see cref="P:IM.Xades.XadesCreator.TimestampProvider"/>
            </remarks>
            <param name="signature">The signature to extend</param>
            <exception cref="T:System.ArgumentNullException">When the signature is null</exception>
            <exception cref="T:System.InvalidOperationException">When no timestamp provider is set</exception>
        </member>
        <member name="M:IM.Xades.XadesCreator.CreateXadesT(System.Xml.XmlDocument,System.String)">
            <summary>
            Create a XAdES-T signature, singing the the part with the provided reference.
            </summary>
            <remarks>
            Create a XAdES-BES and immedately extends it to a XAdES-T.
            </remarks>
            <param name="doc">XML document contains an element with an "Id" equal to the reference parameter</param>
            <param name="reference">The reference of the elmement to sign, without the #-sign</param>
            <returns>The XML-signature element containing the required XAdES structures.</returns>
            <seealso cref="M:IM.Xades.XadesCreator.CreateXadesBes(System.Xml.XmlDocument,System.String)"/>
            <seealso cref="M:IM.Xades.XadesCreator.ExtendToXadesT(System.Xml.XmlElement@)"/>
        </member>
        <member name="M:IM.Xades.XadesCreator.CreateXadesT(System.Xml.XmlDocument)">
            <summary>
            Create a XAdES-T signature, singing the the entire document (enveloped).
            </summary>
            <remarks>
            Create a XAdES-BES and immedately extends it to a XAdES-T.
            </remarks>
            <param name="doc">XML document to be signed.</param>
            <returns>The XML-signature element containing the required XAdES structures.</returns>
            <seealso cref="M:IM.Xades.XadesCreator.CreateXadesBes(System.Xml.XmlDocument)"/>
            <seealso cref="M:IM.Xades.XadesCreator.ExtendToXadesT(System.Xml.XmlElement@)"/>
        </member>
        <member name="P:IM.Xades.XadesCreator.Certificate">
            <summary>
            The certificate with private key to sign with.
            </summary>
            <value>Get or set the certificate that will be used to sign with</value>
        </member>
        <member name="P:IM.Xades.XadesCreator.DataTransforms">
            <summary>
            XML Signature transforms that must be used on the reference of the data.
            </summary>
            <remarks>
            <para>
            This are the transforms that will be applied on the signed data.  The transforms
            on the XAdES properties aren't impacted by this.
            </para>
            <para>
            By default there aren't any transforms, this means the default transform will be used.
            Add the required transformations in the order they should be excuted.
            </para>
            </remarks>
            <value>Get the xml signature transforms used on the data.</value>
            <seealso cref="T:IM.Xades.Extra.OptionalDeflateTransform"/>
            <seealso cref="T:System.Security.Cryptography.Xml.Transform"/>
        </member>
        <member name="P:IM.Xades.XadesCreator.TimestampProvider">
            <summary>
            The timestamp provider that will be used to obtain timestamps.
            </summary>
            <remarks>
            <para>
            XAdES-T and above require timestamp(s), this provider is used to obtain them.
            </para>
            <para>
            XAdES-BES does not require property to be set.
            </para>
            </remarks>
            <seealso cref="T:IM.Xades.TSA.DssTimestampProvider"/>
            <seealso cref="T:IM.Xades.TSA.EHealthTimestampProvider"/>
            <value>Get or set the instance to the timestamp provider or null</value>
        </member>
        <member name="T:IM.Xades.XadesForm">
            <summary>
            Different types of XAdES.
            </summary>
            <remarks>
            All current froms are defined, this does not mean the library supports all.
            </remarks>
        </member>
        <member name="F:IM.Xades.XadesForm.XadesBes">
            <summary>
            Basic Electronic Signature: basic form just satisfying Directive legal requirements for advanced signature.
            </summary>
        </member>
        <member name="F:IM.Xades.XadesForm.XadesEpes">
            <summary>
            Explicit Policy based Electronic Signature: XAdES-BES with a mandatory signature policy (e.g. for a legal/contractual context).
            </summary>
        </member>
        <member name="F:IM.Xades.XadesForm.XadesT">
            <summary>
            Timestamp: adding timestamp field to protect against repudiation.
            </summary>
        </member>
        <member name="F:IM.Xades.XadesForm.XadesC">
            <summary>
            Complete: adding references to verification data (certificates and revocation lists) to the signed documents to allow off-line verification and verification in future (but does not store the actual data).
            </summary>
        </member>
        <member name="F:IM.Xades.XadesForm.XadesX">
            <summary>
            Extended: adding timestamps on the references introduced by XAdES-C to protect against possible compromise of certificates in chain in future.
            </summary>
        </member>
        <member name="F:IM.Xades.XadesForm.XadesXL">
            <summary>
            Extended long-term: adding actual certificates and revocation lists to the signed document to allow verification in future even if their original source is not available.
            </summary>
        </member>
        <member name="F:IM.Xades.XadesForm.XadesA">
            <summary>
            Archival: adding possibility for periodical timestamping (e.g. each year) of the archived document to prevent compromise caused by weakening signature during long-time storage period.
            </summary>
        </member>
        <member name="T:IM.Xades.SignatureInfo">
            <summary>
            Information about a (validated) XAdES signature.
            </summary>
            <remarks>
            Contains the required information about a validated XAdES signature.
            </remarks>
        </member>
        <member name="P:IM.Xades.SignatureInfo.Form">
            <summary>
            The form of the XAdES signature validated.
            </summary>
            <value>
            Contains all the forms that apply for the signature (e.g. XadesBes | XadesT)
            </value>
        </member>
        <member name="P:IM.Xades.SignatureInfo.Certificate">
            <summary>
            The certificate used to sign.
            </summary>
            <value>
            Indentifies the person who signed the message that corresponds to the signature.
            </value>
        </member>
        <member name="P:IM.Xades.SignatureInfo.Time">
            <summary>
            The time the signature was create, if present.
            </summary>
            <value>
            If a time is provided, it is returned here (after validation).
            </value>
        </member>
        <member name="T:IM.Xades.Extra.OptionalDeflateTransform">
            <summary>
            XML-Transsform to inflate binary content.
            </summary>
            <remarks>
            <para>
            Compliant with the conditional-deflate transform as defined by MyCareNet.
            </para>
            <para>
            Only supports stream as input, so should be used after a base64 transform: <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform"/>.
            </para>
            </remarks>
            <value>Implements <literal>urn:nippin:xml:sig:transform:optional-deflate</literal></value>
        </member>
        <member name="M:IM.Xades.Extra.OptionalDeflateTransform.#ctor">
            <summary>
            Default constuctor.
            </summary>
        </member>
        <member name="M:IM.Xades.Extra.OptionalDeflateTransform.LoadInnerXml(System.Xml.XmlNodeList)">
            <summary>
            Not used, not implemented.
            </summary>
            <param name="nodeList">The xml to load</param>
        </member>
        <member name="M:IM.Xades.Extra.OptionalDeflateTransform.GetInnerXml">
            <summary>
            Not used.
            </summary>
            <returns>
            Always <c>null</c>.
            </returns>
        </member>
        <member name="M:IM.Xades.Extra.OptionalDeflateTransform.LoadInput(System.Object)">
            <summary>
            Method used by the library, do not call.
            </summary>
            <param name="obj">The stream to load as imput</param>
        </member>
        <member name="M:IM.Xades.Extra.OptionalDeflateTransform.GetOutput">
            <summary>
            Method used by the library, do not call.
            </summary>
            <returns>
            The enflating stream.
            </returns>
        </member>
        <member name="M:IM.Xades.Extra.OptionalDeflateTransform.GetOutput(System.Type)">
            <summary>
            Method used by the library, do not call.
            </summary>
            <param name="type">The type of output that is required</param>
            <returns>
            The enflating stream
            </returns>
        </member>
        <member name="P:IM.Xades.Extra.OptionalDeflateTransform.InputTypes">
            <summary>
            Property used by by the library.
            </summary>
        </member>
        <member name="P:IM.Xades.Extra.OptionalDeflateTransform.OutputTypes">
            <summary>
            Property used by by the library.
            </summary>
        </member>
        <member name="T:IM.Xades.XadesVerifier">
            <summary>
            Verify XAdES compliant signatures.
            </summary>
            <remarks>
            <para>
            Targets the XAdES 1.4.1 standard.  Currently supports Xades-BES and Xades-T.  Other profiles may be added in the future.
            </para>
            </remarks>
        </member>
        <member name="M:IM.Xades.XadesVerifier.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>
            Creates a verifier that hasn't an explicit Trusted TSA certificate and has a grace period of 10 minutes.
            </remarks>
        </member>
        <member name="M:IM.Xades.XadesVerifier.Verify(System.Xml.XmlDocument,System.Xml.XmlElement)">
            <summary>
            Verify any XAdES (-BES, -T) signature.
            </summary>
            <remarks>
            Requires the XAdES QualifyingProperties and not the signature, it will resolve the signature itself.
            </remarks>
            <param name="doc">The document for which the </param>
            <param name="xadesProps">The XAdES 1.4.1 QualifyingProperties xml-element</param>
            <returns>The (useful) information of the signature and xades properties</returns>
            <exception cref="T:System.ArgumentNullException">When the xades props param is null</exception>
            <exception cref="T:IM.Xades.InvalidXadesException">When the XAdES isn't correctly formatted</exception>
            <exception cref="T:IM.Xades.XadesValidationException">When the signature isn't valid</exception>
            <exception cref="T:System.NotSupportedException">When a XAdES or the signature contains unsupported sections</exception>
        </member>
        <member name="P:IM.Xades.XadesVerifier.TimestampGracePeriod">
            <summary>
            The allowed time difference between the reported time and the time in the timestamp.
            </summary>
            <remarks>
            The provider or reported time is always somewhat before the time in the timestamp because the timestamp can only
            be created afterward.  This property specifies how much before is acceptable.
            </remarks>
            <value>Get or sets the timestamp grace period</value>
        </member>
        <member name="P:IM.Xades.XadesVerifier.TrustedTsaCert">
            <summary>
            Set to trust a specific Timestamp authority.
            </summary>
            <remarks>
            When you want to trust a specific timestamp authority, or the timestamp token does not contain the
            certificates, this property can be used to trust a specific (single) TSA.
            </remarks>
        </member>
        <member name="P:IM.Xades.XadesVerifier.RevocationMode">
            <summary>
            Set the revocation mode of all certification revocation checks.
            </summary>
            <remarks>
            The default value is online, requiring a connection to the internet.  The offline mode
            requires that the crl's are imported in the windows certificate store in advance.  The
            no-check mode deactives the revocation checks and should only be used for testing.
            </remarks>
        </member>
        <member name="T:IM.Xades.InvalidXadesException">
            <summary>
            Exception indicating that the XAdES provided isn't compliant.
            </summary>
        </member>
        <member name="M:IM.Xades.InvalidXadesException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:IM.Xades.InvalidXadesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:IM.Xades.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IM.Xades.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IM.Xades.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:IM.Xades.TSA.DSS.TimeStampAuthority">
            <summary>
            Interface of the TSA client, do not use directly.
            </summary>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignRequest">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="T:IM.Xades.TSA.DSS.RequestBaseType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RequestBaseType.OptionalInputs">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RequestBaseType.InputDocuments">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RequestBaseType.RequestID">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RequestBaseType.Profile">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.AnyType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.AnyType.Any">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.ObjectType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ObjectType.Any">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ObjectType.Id">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ObjectType.MimeType">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ObjectType.Encoding">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SPKIDataType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SPKIDataType.Items">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.PGPDataType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.PGPDataType.Items">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.PGPDataType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.ItemsChoiceType1">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType1.Item">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType1.PGPKeyID">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType1.PGPKeyPacket">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.X509IssuerSerialType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.X509IssuerSerialType.X509IssuerName">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.X509IssuerSerialType.X509SerialNumber">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.X509DataType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.X509DataType.Items">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.X509DataType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.ItemsChoiceType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType.X509CRL">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType.X509Certificate">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType.X509IssuerSerial">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType.X509SKI">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType.X509SubjectName">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.RetrievalMethodType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RetrievalMethodType.Transforms">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RetrievalMethodType.URI">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RetrievalMethodType.Type">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.TransformType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.TransformType.Items">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.TransformType.Text">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.TransformType.Algorithm">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.RSAKeyValueType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RSAKeyValueType.Modulus">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.RSAKeyValueType.Exponent">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.DSAKeyValueType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DSAKeyValueType.P">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DSAKeyValueType.Q">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DSAKeyValueType.G">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DSAKeyValueType.Y">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DSAKeyValueType.J">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DSAKeyValueType.Seed">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DSAKeyValueType.PgenCounter">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.KeyValueType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.KeyValueType.Item">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.KeyValueType.Text">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.KeyInfoType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.KeyInfoType.Items">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.KeyInfoType.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.KeyInfoType.Text">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.KeyInfoType.Id">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.ItemsChoiceType2">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.Item">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.KeyName">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.KeyValue">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.MgmtData">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.PGPData">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.RetrievalMethod">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.SPKIData">
            <remarks/>
        </member>
        <member name="F:IM.Xades.TSA.DSS.ItemsChoiceType2.X509Data">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignatureValueType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureValueType.Id">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureValueType.Value">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.ReferenceType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ReferenceType.Transforms">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ReferenceType.DigestMethod">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ReferenceType.DigestValue">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ReferenceType.Id">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ReferenceType.URI">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ReferenceType.Type">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.DigestMethodType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DigestMethodType.Any">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DigestMethodType.Algorithm">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignatureMethodType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureMethodType.HMACOutputLength">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureMethodType.Any">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureMethodType.Algorithm">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.CanonicalizationMethodType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.CanonicalizationMethodType.Any">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.CanonicalizationMethodType.Algorithm">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignedInfoType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignedInfoType.CanonicalizationMethod">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignedInfoType.SignatureMethod">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignedInfoType.Reference">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignedInfoType.Id">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignatureType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureType.SignedInfo">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureType.SignatureValue">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureType.KeyInfo">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureType.Object">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureType.Id">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.InternationalStringType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.InternationalStringType.lang">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.InternationalStringType.Value">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.ResponseBaseType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ResponseBaseType.Result">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ResponseBaseType.OptionalOutputs">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ResponseBaseType.RequestID">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.ResponseBaseType.Profile">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.Result">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.Result.ResultMajor">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.Result.ResultMinor">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.Result.ResultMessage">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.AttachmentReferenceType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.AttachmentReferenceType.DigestMethod">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.AttachmentReferenceType.DigestValue">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.AttachmentReferenceType.AttRefURI">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.AttachmentReferenceType.MimeType">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.InlineXMLType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.InlineXMLType.Any">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.InlineXMLType.ignorePIs">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.InlineXMLType.ignoreComments">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.DocumentBaseType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentBaseType.ID">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentBaseType.RefURI">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentBaseType.RefType">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentBaseType.SchemaRefs">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.DocumentType">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentType.Item">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.Base64Data">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.Base64Data.MimeType">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.Base64Data.Value">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.InputDocuments">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.InputDocuments.Items">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.DocumentHash">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentHash.Transforms">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentHash.DigestMethod">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentHash.DigestValue">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.DocumentHash.WhichReference">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.TransformedData">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.TransformedData.Transforms">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.TransformedData.Base64Data">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.TransformedData.WhichReference">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignResponse">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignResponse.SignatureObject">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignatureObject">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureObject.Item">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignatureObject.SchemaRefs">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.Base64Signature">
            <summary>
            Internal class, do not use directly.
            </summary>ute()]
        </member>
        <member name="P:IM.Xades.TSA.DSS.Base64Signature.Type">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.Base64Signature.Value">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.SignaturePtr">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignaturePtr.WhichDocument">
            <remarks/>
        </member>
        <member name="P:IM.Xades.TSA.DSS.SignaturePtr.XPath">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.Timestamp">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="P:IM.Xades.TSA.DSS.Timestamp.Item">
            <remarks/>
        </member>
        <member name="T:IM.Xades.TSA.DSS.StampRequest">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="T:IM.Xades.TSA.DSS.StampResponse">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="T:IM.Xades.TSA.DSS.TimeStampAuthorityChannel">
            <summary>
            Internal class, do not use directly.
            </summary>
        </member>
        <member name="T:IM.Xades.TSA.DSS.TimeStampAuthorityClient">
            <summary>
            TSA client, use to specify and configure the TSA via code.
            </summary>
        </member>
        <member name="M:IM.Xades.TSA.DSS.TimeStampAuthorityClient.#ctor">
            <summary>
            Use the configuration with name "Xades.TSA" from the application config 
            </summary>
        </member>
        <member name="M:IM.Xades.TSA.DSS.TimeStampAuthorityClient.#ctor(System.String)">
            <summary>
            Uses the configuration with the provided name from the application config.
            </summary>
            <param name="endpointConfigurationName">The configuration name of the application config</param>
        </member>
        <member name="M:IM.Xades.TSA.DSS.TimeStampAuthorityClient.#ctor(System.String,System.String)">
            <summary>
            Uses the configuration wit the provided name from the application config, but overrides the address.
            </summary>
            <param name="endpointConfigurationName">The configuration name of the application conifg</param>
            <param name="remoteAddress">The address of the TSA (without ?wsdl at the end)</param>
        </member>
        <member name="M:IM.Xades.TSA.DSS.TimeStampAuthorityClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Uses the configuration wit the provided name from the application config, but overrides the address.
            </summary>
            <param name="endpointConfigurationName">The configuration name of the application config</param>
            <param name="remoteAddress">The address of the TSA</param>
        </member>
        <member name="M:IM.Xades.TSA.DSS.TimeStampAuthorityClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Uses the provided binding and address, does not uses the application config.
            </summary>
            <param name="binding">The pre-configured binding</param>
            <param name="remoteAddress">The address of the TSA</param>
        </member>
        <member name="M:IM.Xades.TSA.DSS.TimeStampAuthorityClient.Stamp(IM.Xades.TSA.DSS.SignRequest)">
            <summary>
            Method used by the library, do not call.
            </summary>
        </member>
        <member name="T:IM.Xades.TSA.DssTimestampProvider">
            <summary>
            Timestamp provider for TSA's that implement the DSS Timestamp profile.
            </summary>
            <remarks>
            <para>
            Send a DSS-Sign request compliant with the timestamp profile to the TSA.
            </para>
            <para>
            The call is made via a WCF client, <see cref="M:IM.Xades.TSA.DssTimestampProvider.#ctor(IM.Xades.TSA.DSS.TimeStampAuthorityClient)"/>
            </para>
            </remarks>
        </member>
        <member name="F:IM.Xades.TSA.DssTimestampProvider.profile">
            <summary>
            The profile identifier to send to the TSA to request a timestamp.
            </summary>
            <value>
            The profile identifier, defaults to the standard value <literal>urn:oasis:names:tc:dss:1.0:profiles:timestamping</literal>.
            </value>
        </member>
        <member name="M:IM.Xades.TSA.DssTimestampProvider.#ctor">
            <summary>
            Default constructor using default TSA client of the application configuration.
            </summary>
            <remarks>
            <para>
            When this constructor is used, the application configuration is searched for a TSA client with the name "Xades.TSA".
            </para>
            <para>
            The exact configuration requirements depend on the TSA and should be obtained from them.
            </para>
            </remarks>
        </member>
        <member name="M:IM.Xades.TSA.DssTimestampProvider.#ctor(System.String)">
            <summary>
            Constructor using a TSA client with the provided configuration.
            </summary>
            <remarks>
            <para>
            When this constructor is used, the application configuration is searched for a TSA client with the provided name.
            </para>
            <para>
            The exact configuration requirements depend on the TSA and should be obtained from them.
            </para>
            </remarks>
            <param name="config">The configuration name of the TSA client</param>
        </member>
        <member name="M:IM.Xades.TSA.DssTimestampProvider.#ctor(IM.Xades.TSA.DSS.TimeStampAuthorityClient)">
            <summary>
            Constructor using a provided TSA client.
            </summary>
            <remarks>
            <para>
            When this constructor is used, the application configuration isn't used.
            </para>
            <para>
            The exact configuration requirements depend on the TSA and should be obtained from them.
            </para>
            </remarks>
            <example>
            <code language="C#">
            var tsa = new TSA.DSS.TimeStampAuthorityClient(new BasicHttpBinding(), new EndpointAddress("http://www.ca.com/TSA"));
            tsa.ClientCredentials.ClientCertificate.Certificate = certificate;
            var tsProvider = new DssTimestampProvider(tsa);
            </code>
            </example>
            <param name="client">The pre-configured instance of the TSA client.</param>
        </member>
        <member name="M:IM.Xades.TSA.DssTimestampProvider.GetTimestampFromDocumentHash(System.Byte[],System.String)">
            <summary>
            Method used by the library, not not call youself.
            </summary>
            <param name="hash">The hash on which the digesht must be calculated</param>
            <param name="digestMethod">The digest method with which the hash was calculated</param>
            <returns>The RFC3161 Timestamp token</returns>
        </member>
        <member name="P:IM.Xades.TSA.DssTimestampProvider.Profile">
            <summary>
            The profile identifier to send to the TSA to request a timestamp.
            </summary>
            <remarks>
            defaults to the standard value <literal>urn:oasis:names:tc:dss:1.0:profiles:timestamping</literal>.
            </remarks>
            <value>
            Gets and sets the profile identifier.
            </value>
        </member>
        <member name="T:IM.Xades.Extra.XadesTools">
            <summary>
            Set of useful functions related to xades (except for sign an verify).
            </summary>
        </member>
        <member name="M:IM.Xades.Extra.XadesTools.FindXadesProperties(System.Xml.XmlNode)">
            <summary>
            Extacts all the XAdES quulifying properties out of the provided node.
            </summary>
            <param name="node">The node to look for xades qualifying properties</param>
            <returns>The list of properties found, can be emtpy if none are found</returns>
        </member>
        <member name="T:IM.Xades.XadesValidationException">
            <summary>
            Exception indicating that the XAdES signature is invalid.
            </summary>
        </member>
        <member name="M:IM.Xades.XadesValidationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:IM.Xades.XadesValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">The exception message</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:IM.Xades.TSA.EHealthTimestampProvider">
            <summary>
            Timestamp provider for eHealth as TSA.
            </summary>
            <remarks>
            eHealth has a TSA that uses DSS but defines its own profile that is based on the DSS timestamp profile.
            </remarks>
        </member>
        <member name="M:IM.Xades.TSA.EHealthTimestampProvider.#ctor">
            <summary>
            Default constructor using default TSA client of the application configuration.
            </summary>
            <remarks>
            <para>
            When this constructor is used, the application configuration is searched for a TSA client with the name "Xades.TSA".
            </para>
            <para>
            The eHealth TSA requires the StsBinding as provided by the eH-I codeplex project.
            </para>
            </remarks>
        </member>
        <member name="M:IM.Xades.TSA.EHealthTimestampProvider.#ctor(System.String)">
            <summary>
            Constructor using a TSA client with the provided configuration.
            </summary>
            <remarks>
            <para>
            When this constructor is used, the application configuration is searched for a TSA client with the provided name.
            </para>
            <para>
            The eHealth TSA requires the StsBinding as provided by the eH-I codeplex project.
            </para>
            </remarks>
            <param name="config">The configuration name of the TSA client</param>
        </member>
        <member name="M:IM.Xades.TSA.EHealthTimestampProvider.#ctor(IM.Xades.TSA.DSS.TimeStampAuthorityClient)">
            <summary>
            Constructor using a provided TSA client.
            </summary>
            <remarks>
            <para>
            When this constructor is used, the application configuration isn't used.
            </para>
            <para>
            The eHealth TSA requires the StsBinding as provided by the eH-I codeplex project.
            </para>
            </remarks>
            <example>
            <code language="C#">
            tsa = new TSA.DSS.TimeStampAuthorityClient(new StsBinding(), new EndpointAddress("https://wwwacc.ehealth.fgov.be/timestampauthority_1_5/timestampauthority"));
            tsa.Endpoint.Behaviors.Remove&lt;ClientCredentials&gt;();
            tsa.Endpoint.Behaviors.Add(new OptClientCredentials());
            tsa.ClientCredentials.ClientCertificate.Certificate = certificate;
            var tsProvider = new EHealthTimestampProvider(tsa);
            </code>
            </example>
            <param name="client">The pre-configured instance of the TSA client.</param>
        </member>
        <member name="M:IM.Xades.TSA.EHealthTimestampProvider.GetTimestampFromDocumentHash(System.Byte[],System.String)">
            <summary>
            Method used by the library, not not call youself.
            </summary>
            <param name="hash">The hash on which the digesht must be calculated</param>
            <param name="digestMethod">The digest method with which the hash was calculated</param>
            <returns>The RFC3161 Timestamp token</returns>
        </member>
    </members>
</doc>
